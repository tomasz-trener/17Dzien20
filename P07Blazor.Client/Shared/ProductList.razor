@inject IProductService ProductService


@*@code {

    [Inject]
    IProductService ProductService { get; set; }
}*@

<div class="widget-content widget-content-area">
    <div class="table-responsive mb-4">
        <div id="style-3_wrapper" class="dataTables_wrapper container-fluid dt-bootstrap4 no-footer">
            <div class="row"><div class="col-sm-12 col-md-6"><div class="dataTables_length" id="style-3_length"><label>Results :  <select name="style-3_length" aria-controls="style-3" class="form-control"><option value="5">5</option><option value="10">10</option><option value="20">20</option><option value="50">50</option></select></label></div></div><div class="col-sm-12 col-md-6"><div id="style-3_filter" class="dataTables_filter"><label><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg><input type="search" class="form-control" placeholder="Search..." aria-controls="style-3"></label></div></div></div><div class="row">
                <div class="col-sm-12">

                    <button @onclick="NewProduct_OnClick" class="btn btn-secondary mb-2">New Product</button>

                    <table id="style-3" class="table style-3 table-hover dataTable no-footer" role="grid" aria-describedby="style-3_info">
                        <thead>
                            <tr role="row">
                                <th class="checkbox-column text-center sorting_asc" tabindex="0" aria-controls="style-3" rowspan="1" colspan="1" aria-sort="ascending" aria-label=" Record Id : activate to sort column descending" style="width: 170.422px;"> Record Id </th>
                                <th class="text-center sorting" tabindex="0" aria-controls="style-3" rowspan="1" colspan="1" aria-label="Image: activate to sort column ascending" style="width: 108.844px;">Image</th>
                                <th class="sorting" tabindex="0" aria-controls="style-3" rowspan="1" colspan="1" aria-label="First Name: activate to sort column ascending" style="width: 183.344px;">Title</th>
                                <th class="sorting" tabindex="0" aria-controls="style-3" rowspan="1" colspan="1" aria-label="Last Name: activate to sort column ascending" style="width: 174px;">Description</th>
                                <th class="text-center sorting" tabindex="0" aria-controls="style-3" rowspan="1" colspan="1" aria-label="Status: activate to sort column ascending" style="width: 147.031px;">Status</th>
                                <th class="text-center sorting" tabindex="0" aria-controls="style-3" rowspan="1" colspan="1" aria-label="Action: activate to sort column ascending" style="width: 126.156px;">Action</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var p in ProductService.ProductsVM)
                            {
                                <tr role="row">
                                    <td class="checkbox-column text-center sorting_1"> @p.Id </td>
                                    <td class="text-center">
                                        <span><img src="@p.ImageUrl" class="profile-img" alt="avatar"></span>
                                    </td>


                                    @if (EditingId != null && EditingId == p.Id)
                                    {
                                        <td><input @bind-value="productTitle" type="text" /></td>
                                        <td><input @bind-value="productDescription" type="text" /></td>
                                    }
                                    else
                                    {
                                        <td>@p.Title</td>
                                        <td>@p.Description</td>
                                    }



                                    <td class="text-center"><span class="shadow-none badge badge-primary">Approved</span></td>
                                    <td class="text-center">
                                        <ul class="table-controls">
                                            <li><a @onclick="(()=> Edit_OnClick(p.Id))" href="javascript:void(0);" class="bs-tooltip" data-toggle="tooltip" data-placement="top" title="" data-original-title="Edit"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-2 p-1 br-6 mb-1"><path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path></svg></a></li>
                                            <li><a @onclick="(()=> Delete_OnClick(p.Id))" href="javascript:void(0);" class="bs-tooltip" data-toggle="tooltip" data-placement="top" title="" data-original-title="Delete"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash p-1 br-6 mb-1"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg></a></li>
                                        </ul>
                                    </td>
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div><div class="row"><div class="col-sm-12 col-md-5"><div class="dataTables_info" id="style-3_info" role="status" aria-live="polite">Showing page 1 of 2</div></div><div class="col-sm-12 col-md-7"><div class="dataTables_paginate paging_simple_numbers" id="style-3_paginate"><ul class="pagination"><li class="paginate_button page-item previous disabled" id="style-3_previous"><a href="#" aria-controls="style-3" data-dt-idx="0" tabindex="0" class="page-link"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg></a></li><li class="paginate_button page-item active"><a href="#" aria-controls="style-3" data-dt-idx="1" tabindex="0" class="page-link">1</a></li><li class="paginate_button page-item "><a href="#" aria-controls="style-3" data-dt-idx="2" tabindex="0" class="page-link">2</a></li><li class="paginate_button page-item next" id="style-3_next"><a href="#" aria-controls="style-3" data-dt-idx="3" tabindex="0" class="page-link"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></a></li></ul></div></div></div>
        </div>
    </div>
</div>

@code {
    private string productTitle;
    private string productDescription;
    //public bool EditingState = false;
    private int? EditingId { get; set; } = null;

    private async void Edit_OnClick(int id)
    {
        if (EditingId != null && id == EditingId.Value) // zapisujemy dane
        {
            ProductVM edited = new ProductVM()
                {
                    Id =id,
                    Title = productTitle,
                    Description = productDescription
                };

            if (id==0) // tzn tworzymy nowy produkt
            {
                    await ProductService.CreateProduct(edited);
                   // StateHasChanged();
            }
            else
            { // edytujemy
                    await ProductService.EditProduct(edited);      
            }  
            EditingId = null;
        }
        else
        { // tzn ze przechodzimy w tryb dycji 
            EditingId = id;

            var editingProduct = ProductService.FindProduct(id);
            productTitle = editingProduct.Title;
            productDescription = editingProduct.Description;
        }
        // EditingState = !EditingState;
    }

    protected override async Task OnInitializedAsync()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

    private async void NewProduct_OnClick()
    {
        ProductVM newProduct = new ProductVM()
            {
                Id = 0
            };
        EditingId = 0;

        ProductService.ProductsVM.Insert(0, newProduct);
    }

    private async void Delete_OnClick(int id)
    {
        await ProductService.DeleteProduct(id);
    }

}